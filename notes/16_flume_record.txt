# 1. 配置文件(安装环境java配置)
cp  flume-env.sh.template  flume-env.sh
vim conf/flume-env.sh
JAVA_HOME=/usr/local/java

# 2. sources,channels,sinks配置
cd  /usr/local/flume/conf    
vim log-kafka.properties

	[centos@localhost flume]$ cat conf/log-kafka.properties 

	# >>>>>>>>>>  Name the components on this agent <<<<<<<<<<
	agent.sources = exectail
	agent.channels = memoryChannel
	agent.sinks = kafkasink

	# >>>>>>>>>> Describe/configure the source <<<<<<<<<<<
	agent.sources.exectail.type = exec
	# 下面这个路径是需要收集日志的绝对路径，改为自己的日志目录
	# tail -f <file> : -f 表示循环读取， 循环读取<file>最后10行内容
	agent.sources.exectail.command = tail -f /home/centos/flume_logs/agent.log
	# 拦截器？？
	agent.sources.exectail.interceptors = i1
	agent.sources.exectail.interceptors.i1.type = regex_filter
	# 定义日志过滤前缀的正则
	agent.sources.exectail.interceptors.i1.regex = .+PRODUCT_RATING_PREFIX.+

	# >>>>>>>>>> define channels <<<<<<<<<<<
	agent.channels.memoryChannel.type = memory
	agent.channels.memoryChannel.capacity = 10000 

	# >>>>>>>>>> define sinks <<<<<<<<<<<
	agent.sinks.kafkasink.type = org.apache.flume.sink.kafka.KafkaSink
	agent.sinks.kafkasink.kafka.topic = log
	agent.sinks.kafkasink.kafka.bootstrap.servers = 192.168.1.213:6667
	agent.sinks.kafkasink.kafka.producer.acks = 1
	agent.sinks.kafkasink.kafka.flumeBatchSize = 20

	# >>>>>>>>>> Bind the sources and sinks to the channels  <<<<<<<<<<<
	agent.sources.exectail.channels = memoryChannel
	agent.sinks.kafkasink.channel = memoryChannel
	# tips: source:channel = 1:n ; sink:chanel=1:1, 因此source用channels, sink用channel




# 3. 启动flume
[centos@localhost flume]$ ./bin/flume-ng agent -c ./conf/ -f ./conf/log-kafka.properties -n agent -Dflume.root.logger=INFO,console
	-n agent: 指定agent名 ，-n 	Agent的名称（必填）
	-c ./conf/: 在目录使用配置文件。指定配置文件放在什么目录, 也可以 --conf
	-f ./conf/log-kafka.properties：指定配置文件，这个配置文件必须在全局选项的–conf参数定义的目录下。（必填）
	-Dflume.root.logger=INFO,console：将日志输入到控制台上
	
	
# >>>>>>>>>>>>>>>> windows目录挂载到linux <<<<<<<<<<<<<<<<<
由于测试环境下 埋点日志 在windows系统下，flume在linux系统下，flume的source监控的日志需要先挂载到linux
todo: 埋点日志除了设置本地外，也可以直接设置为hadoop路径(应该需要复制hadoop的属性文件到resources中)
# 1.
	businessServer的resources中log4j日志，设置埋点日志本地路径：
	G:\demo\DEMO_2\ECommerceRecommendSystem\businessServer\src\main\log\agent.log
# 2.
1). 先在 Windows 下面共享需要挂载的目录
    右键需要共享的文件夹 , 选择共享 , 然后默认设置就可以
    然后在其他的机器测试是否能正常访问 , 在其他机器资源管理器里面输入 \\xxx.xxx.xxx.xxx\Share , 地址格式是 \\你的IP\你的共享文件夹
    出现无法访问或者指定的密码不正确时 , 可参考如下设置 :
    修改网络安全设置 : 开始 -> 运行 gpedit.msc , 打开组策略 -> 计算机配置 -> Windows设置 -> 安全设置 -> 本地策略 -> 安全选项 -> 
	选择 “网络安全 : LAN 管理器身份验证级别” , 双击打开 , 设置成“发送 LM 和 NTLM 响应” ;
    修改网络访问模型 : 开始 -> 运行 -> gpedit.msc -> 计算机配置 -> Windows设置 -> 安全设置 -> 本地策略 -> 安全选项 -> 选择 “网络访问:本地帐户的共享和安全模型” , 修改为使用经典模式 ;

2). linux下挂载windows的共享目录：
	[centos@master ~]$ sudo mount -t cifs -o username=Administrator,password=szlh.2020 //10.180.164.137/demo /mnt/G/demo/
	df -h # 查看挂载情况   不要用 -lh

3). 卸载挂载：
	umount /usr/local/bin/code
	
	
# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> flum course <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
1. netcat 安裝和使用
源码编译安裝：
	下载地址：http://sourceforge.net/projects/netcat/files/netcat/0.7.1/（下载的是netcat-0.7.1.tar.gz版本）
	wget https://sourceforge.net/projects/netcat/files/netcat/0.7.1/netcat-0.7.1.tar.gz
	sudo tar -zxvf netcat-0.7.1.tar.gz -C /usr/local
	sudo mv netcat-0.7.1 netcat
	cd /usr/local/netcat
	# 配置，将安装文件放在 /opt/netcat 目录下，卸载时，只要删除该目录即可
	./configure --prefix=/opt/netcat
	# 编译安装, 之后会创建 /opt/netcat 安装文件夹
	sudo make
	sudo make install
	# 添加环境配置
	su root
	vim /etc/profile
		# set  netcat path
		export NETCAT_HOME=/opt/netcat
		export PATH=$PATH:$NETCAT_HOME/bin
	# 使配置生效
	source /etc/profile
	# 检验安装是否成功
	nc --help
	# 退出root用戶
	
监听端口4444是否被占用：
	sudo netcat -ntulp | grep 4444
	
2. netcat 参数
	参数 	作用
	-g 	<网关> 设置路由器跃程通信网关，最多可设置8个
	-G  指向器数目 	设置来源路由指向器，其数值为4的倍数
	-h 	在线帮助；
	-i  延迟秒数 	设置时间间隔，以便传送信息及扫描通信端口；
	-l 	使用监听模式，管控传入的资料；
	-n 	直接使用IP地址，而不通过域名服务器；
	-o  输出文件 	指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存；
	-p  通信端口 	设置本地主机使用的通信端口；
	-r 	乱数指定本地与远端主机的通信端口；
	-s  来源位址 	设置本地主机送出数据包的IP地址；
	-u 	使用UDP传输协议扫描，不加默认为TCP扫描；
	-v 	显示指令执行过程；
	-w  超时秒数 	设置等待连线的时间；
	-z 	使用0输入/输出模式，只在扫描通信端口时使用。
	-e 	program to exec after connect
	-c 	as `-e’; use /bin/sh to exec

	
3. 聊天
发送端：侦听服务器
	[centos@node4 ~]$ nc -l -p 5522
	hello
	st
	...
	注：-l 侦听，-p 指定端口号
接收端：
	[centos@node5 ~]$ nc -nv 192.168.1.214 5522
	192.168.1.214 5522 open
	hello
	st
	
4.  >>>>>>>>>>>>>>>>>>>>>>> netcat-flume-logger <<<<<<<<<<<<<<<<<<<<<<<<<<<
netcat-flume-logger.properties
	# Name the componets on this agent: a1
	a1.sources = r1
	a1.sinks = k1
	a1.channels = c1

	# Decribe/configure the source
	a1.sources.r1.type = netcat
	a1.sources.r1.bind = localhost
	a1.sources.r1.port = 4444

	# Describe the sink 
	a1.sinks.k1.type = logger

	# Use a channel which buffers events in memory
	a1.channels.c1.type = memory
	a1.channels.c1.capacity = 1000
	a1.channels.c1.transactionCapacity = 100

	# Bind the source and sink to the channel 
	a1.sources.r1.channels = c1
	a1.sinks.k1.channel = c1
启动flume:
	[centos@node5 flume]$ ./bin/flume-ng agent -n a1 -c ./conf/ -f ./job/netcat-flume-log.properties -Dflume.root.logger=INFO,console
启动(flume先启动，再开启nc, 发送端):
	[centos@node5 flume]$ nc localhost 4444
注意：
	1) a1.sources.r1.bind = localhost 或 a1.sources.r1.bind = <本机ip>, 貌似只能是本机的netcat, 其他ip无法bind
	

5. >>>>>>>>>>>>>>>>>>>>>>> netcat-flume-logger <<<<<<<<<<<<<<<<<<<<<<<<<<<

	

