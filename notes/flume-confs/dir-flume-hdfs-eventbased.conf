#  通常不使用基于 事件策略 的sink
# EventBased Strategy 貌似可以不配置 a3.sinks.k3.hdfs.minBlockReplicas=1
# TimeBased Strategy 需要配置
# -------------------------------------------------------
# Name the components on this agent
a3.sources = r3
a3.sinks = k3
a3.channels = c3


# Describe/configure the source
a3.sources.r3.type = spooldir
#a3.sources.r3.spoolDir = /mnt/D/output
a3.sources.r3.spoolDir = /usr/local/flume/lyu
a3.sources.r3.fileSuffix = .COMPLITED
a3.sources.r3.fileHeader = true
a3.sources.r3.ignorePattern = ([^ ]*\.tmp)
# set maxLineLength:600k per line or per event
# 传输的数据大小522k左右，设置maxLineLength=600k,可以保证一个file上传后还是一个file,没有被分割
#a3.sources.r3.deserializer.maxLineLength = 614400
a3.sources.r3.deserializer.maxLineLength = 20480



# Describe the sink
a3.sinks.k3.type = hdfs
a3.sinks.k3.hdfs.path = hdfs://master:9000/lyu/flume/%Y%m%d/%H
# 上传文件的前缀
a3.sinks.k3.hdfs.filePrefix = event-based-upload-

# 是否按照时间滚动《文件夹》
a3.sinks.k3.hdfs.round = true
# 多少时间单位创建一个新的文件夹
a3.sinks.k3.hdfs.roundValue = 1
# 重新定义时间单位
a3.sinks.k3.hdfs.roundUnit = hour
# flume/%Y%m%d/%H，这里是H，对应设置 roundUnit=hour

# 是否使用本地时间戳
a3.sinks.k3.hdfs.useLocalTimeStamp = true

# key,if not set to 1, samll file will created and roll_params do not work
#a3.sinks.k3.hdfs.minBlockReplicas=1

# 批大小：积攒多少个 Event 才 flush 到 HDFS 一次
a3.sinks.k3.hdfs.batchSize = 100

# 设置文件类型，可支持压缩
a3.sinks.k3.hdfs.fileType = DataStream
# -------------- 文件滚动策略:以下3个满足其中之一就会生成新文件 ------------
# 多久生成一个新的《文件》，单位：秒, 生产中不能设置这么短时间，小文件太多
a3.sinks.k3.hdfs.rollInterval = 0
# 设置每个文件的滚动大，一般生产中设置为 hdfs 的块大小,比块大小略小一些(128M)
a3.sinks.k3.hdfs.rollSize = 134217700
# 文件的滚动与 Event 数量无关, 生产中一般关闭rollCount
# 55个event合并在一个hdfs的文件中??感觉不是这样呀
a3.sinks.k3.hdfs.rollCount = 20

# 设置闲置时间120s，达到时长没数据的话就自动关闭文件
a3.sinks.k3.hdfs.idleTimeout = 120



# Use a channel which buffers events in memory
a3.channels.c3.type = memory
a3.channels.c3.capacity = 1000
a3.channels.c3.transactionCapacity = 100


# Bind the source and sink to the channel
a3.sources.r3.channels = c3
a3.sinks.k3.channel = c3

